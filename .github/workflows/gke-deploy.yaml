name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: time-machine    # cluster name
  GKE_ZONE: us-west1   # cluster zone
  IMAGE_TAG: latest # image tag

jobs:
  setup-build-publish:
    name: Setup, Build, Publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: tm-auth
            path: auth/
          - image: tm-forecast
            path: forecast_module/
          - image: tm-frontend
            path: frontend/

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GKE_SA_KEY }}

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/${{ matrix.image }}:$IMAGE_TAG" \
          ${{ matrix.path }}
  
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/${{ matrix.image }}:$IMAGE_TAG"

  gke_deploy:
    # Deploy the Docker image to the GKE cluster
    name: Deploy
    runs-on: ubuntu-latest
    needs: "Setup, Build, Publish"

    steps:
    - name: Deploy
      run: |-
        kubectl apply -f deployment.yaml
        kubectl get pods
